// Account Managemnet Software/System.

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <conio.h>
struct account
{
    char first_name[20];
    char last_name[20];
    char user_name[20];
    char phone[15];
    char address[30];
    char DOB[15];
    char gender;
    char password[15];
    char password1[15];
    char nick_name[20];
};
void divider()                   //Divides the line by putting multiple dash.
{
    for (int i = 0; i < 65; i++)
    {
        printf("-");
    }
    printf("\n");
}
int menu();
void sign_up();
void log_in();
void modify();
void change_pass();
void delete_account();
char* takepassword(char[]);
int main()                      //Main Program.             
{
    while (1)
    {
        system("cls");
        switch (menu())
        {
        case 1:
            sign_up();
            break;
        case 2:
            log_in();
            break;
        case 3:
            modify();
            break;
        case 4:
            change_pass();
            break;
        case 5:
            delete_account();
            break;
        case 6:
            printf("\n");
            divider();
            printf("\n******************* THANK YOU ********************\n\n");
            printf("\nPRESS ANY KEY TO EXIT .");
            getch();
            exit(0);                 // Exit.
        default:
            printf("INVALID NUMBER.\n");
            printf("\nPRESS ANY KEY TO CONTINUE .");
            getch();
            break;
        }
    }
    return 0;
}
int menu()                     //Shows Main menu.
{
    int c;
    printf("        *************** MAIN MENU ***************\n");
    divider();
    printf("1. SIGN UP.\n");
    printf("2. LOG IN.\n");
    printf("3. MODIFY YOUR EXISTING DATA.\n");
    printf("4. CHANGE PASSWORD.\n");
    printf("5. DELETE ACCOUNT.\n");
    printf("6. EXIT.\n");
    divider();
    printf("Enter your choice. ");
    scanf("%d", &c);
    return c;
}
void sign_up()                 //Let us sign up a account.
{
    struct account s;
    system("cls");
    char nick_name[20];
    char pass2[20];
    printf("CREATING YOUR ACCOUNT....\n");
    divider();
    printf("Enter your first name : ");
    scanf("%s", s.first_name);
    printf("Enter your last name : ");
    scanf("%s", s.last_name);
    printf("Enter your mobile number : ");
    scanf("%s", s.phone);
    printf("Enter your address : ");
    scanf(" %[^\n]", s.address);
    printf("Enter your Date of birth(YYYY-MM-DD) : ");
    scanf("%s", s.DOB);
    start:
    printf("Enter your Gender(M/F) : ");
    scanf(" %c", &s.gender);
    if (s.gender != 'M' && s.gender != 'F')
    {
        printf("INVALID GENDER!\n");
        goto start;
    }
    printf("Enter your user name : ");
    scanf("%s", s.user_name);
    top:
    printf("Enter your password : ");
    takepassword(s.password);
    printf("\n");
    printf("Confirm your password : ");
    takepassword(pass2);
    printf("\n");
    if (strcmp(pass2, s.password) != 0)
    {
        printf("Passwords doesn't match try again.\n");
        goto top;
    }
    else
    {
        FILE *fp = fopen("D:\\account.txt", "wb");
        if (fp == NULL)
        {
            printf("Error opening file! Exiting...\n");
            exit(1);
        }
        printf("\nEnter security question (In Case You Forget Your Password) \n");
        printf("What is your nickname? : ");
        scanf("%s", s.nick_name);
        fwrite(&s, sizeof(struct account), 1, fp);
        fclose(fp);
        printf("\n");
        divider();
        printf("\n**************** ACCOUNT CREATED SUCCESSFULLY *****************\n");
        printf("\nPRESS ANY KEY TO CONTINUE .");
        getch();
    }
}
char* takepassword(char pass[])          //Takes password and return it showing "*" instead of text.
{
    int i = 0;
    char ch;
    while (1)
    {
        ch = getch();
        if (ch == 13)
        {
            pass[i] = '\0';
            break;
        }
        else if (ch == 8)
        {
            if (i > 0)
            {
                i--;
                printf("\b \b");
            }
        }
        else if (ch == 9 || ch == 32)
        {
            continue;
        }
        else
        {
            pass[i++] = ch;
            printf("*");
        }
    }
    return pass;
}
void log_in()                            //Let us log into our account.
{
    system("cls");
    printf("LOGGING IN....\n");
    divider();
    char user[20], log_pass[15], nick[20], pass2[15];
    struct account s;
    FILE *fp = fopen("D:\\account.txt", "rb");
    if (fp == NULL)
    {
    printf("Error opening file! Exiting...\n");
    exit(1);
    }
    fread(&s, sizeof(struct account), 1, fp);
    name:
    printf("Enter Username : ");
    scanf("%s", user);
    if (strcmp(s.user_name, user))
    {
        printf("\nPLEASE ENTER CORRECT USERNAME.\n");
        goto name;
    }
    else
    {
    logpass:
        printf("\nEnter password : ");
        takepassword(log_pass);
        if (strcmp(s.password, log_pass))
        {
            printf("\nINCORRET PASSWORD \n");
            printf("\nDid you forget your password?[Y/N] : ");
            char f = getche();
            if (f == 'Y' || f == 'y')
            {
                nickname:
                printf("\nWhat is your nickname? : ");
                scanf("%s", nick);
                if (strcmp(nick, s.nick_name))
                {
                    printf("Incorrect Nickname. Please try again.");
                    goto nickname;
                }
                else
                {
                top:
                    printf("\nEnter new password : ");
                    takepassword(s.password1);
                    if (strcmp(s.password1, s.password))
                    {
                        printf("\n");
                        printf("Confirm new password : ");
                        takepassword(pass2);
                        printf("\n");
                        if (strcmp(pass2, s.password1))
                        {
                            printf("Passwords doesn't match try again.\n");
                            goto top;
                        }
                        else
                        {
                            strcpy(s.password, s.password1);
                            fp = fopen("D:\\account.txt", "wb");
                            fwrite(&s, sizeof(s), 1, fp);
                            printf("\n");
                            divider();
                            printf("\n*************** PASSWORD CHANGED SUCCESSFULLY ***************\n");
                            printf("\nPRESS ANY KEY TO CONTINUE .");
                            getch();
                            system("cls");
                            goto logpass;
                        }
                    }
                    else
                    {
                        printf("\nNew password cannot be same as Old password.\n");
                        goto top;
                    }
                }
            }
            else
            {
                goto logpass;
            }
        }
        else
        {
            system("cls");
            printf("\n***************** WELCOME %s *****************\n", s.first_name);
            divider();
            printf("\nYOUR DETAILS : \n");
            divider();
            printf("FIRST NAME     : %s\n", s.first_name);
            printf("LAST NAME      : %s\n", s.last_name);
            printf("PHONE NUMBER   : %s\n", s.phone);
            printf("ADDRESS        : %s\n", s.address);
            printf("DOB            : %s\n", s.DOB);
            printf("GENDER         : %c\n", s.gender);
            printf("USER NAME      : %s\n", s.user_name);
            printf("NICK NAME      : %s\n", s.nick_name);
            divider();
            printf("\nPRESS ANY KEY TO CONTINUE .");
        }
        getch();
    }
    fclose(fp);
}
void modify()                           //Let us Modify our account.
{
    system("cls");
    printf("MODIFYING YOUR DATA....\n");
    divider();
    struct account s;
    char user1[20], pass[15], nick[20], pass2[15];
    int i;
    FILE *fp = fopen("D:\\account.txt", "rb+");
    if (fp == NULL)
    {
    printf("Error opening file! Exiting...\n");
    exit(1);
    }
    fread(&s, sizeof(s), 1, fp);
    top1:
    printf("Enter username : ");
    scanf("%s", user1);
    if (strcmp(user1, s.user_name))
    {
        printf("\nUser name doesn't match.\n");
        goto top1;
    }
    top2:
    printf("\nEnter password : ");
    takepassword(pass);
    if (strcmp(pass, s.password))
    {
        printf("\nPassword doesn't match.\n");
        printf("\nDid you forget your password?[Y/N] : ");
        char f = getche();
        if (f == 'Y' || f == 'y')
        {
            nickname:
            printf("\nWhat is your nickname? : ");
            scanf("%s", nick);
            if (strcmp(nick, s.nick_name))
            {
                printf("Incorrect Nickname. Please try again.");
                goto nickname;
            }
            else
            {
                top:
                printf("\nEnter new password : ");
                takepassword(s.password1);
                if (strcmp(s.password1, s.password))
                {
                    printf("\n");
                    printf("Confirm new password : ");
                    takepassword(pass2);
                    printf("\n");
                    if (strcmp(pass2, s.password1))
                    {
                        printf("Passwords doesn't match try again.\n");
                        goto top;
                    }
                    else
                    {
                        strcpy(s.password, s.password1);
                        fwrite(&s, sizeof(s), 1, fp);
                        printf("\n");
                        divider();
                        printf("\n*************** PASSWORD CHANGED SUCCESSFULLY ***************\n");
                        printf("\nPRESS ANY KEY TO CONTINUE .\n");
                        system("cls");
                        getch();
                        goto top2;
                    }
                }
                else
                {
                    printf("\nNew password cannot be same as Old password.\n");
                    goto top;
                }
            }
        }
        else
        {
            goto top2;
        }
    }
    system("cls");
    fread(&s, sizeof(s), 1, fp);
    printf("\n*****************WELCOME %s*****************\n", s.first_name);
    divider();
    top3:
    printf("\nWhat do you want to Modify :\n");
    printf("1. FIRST NAME.\n2. LAST NAME.\n3. PHONE NUMBER.\n4. ADDRESS.\n5. DATE OF BIRTH.\n6. GENDER.\n7. USER NAME.\n8. NICK NAME.\n9. EXIT. \n");
    divider();
    printf("\nEnter your choice : ");
    scanf("%d", &i);
    switch (i)
    {
    case 1:
        printf("Enter your new First name : ");
        scanf("%s", s.first_name);
        fseek(fp, 0, SEEK_SET);
        fwrite(&s, sizeof(s), 1, fp);
        printf("\n");
        divider();
        printf("\n************ FIRST NAME CHANGED SUCCESSFULLY ***********\n");
        printf("\nPRESS ANY KEY TO CONTINUE .");
        getch();
        system("cls");
        goto top3;
    case 2:
        printf("Enter your new Last name : ");
        scanf("%s", s.last_name);
        fseek(fp, 0, SEEK_SET);
        fwrite(&s, sizeof(s), 1, fp);
        printf("\n");
        divider();
        printf("\n************ LAST NAME CHANGED SUCCESSFULLY ************\n");
        printf("\nPRESS ANY KEY TO CONTINUE .");
        getch();
        system("cls");
        goto top3;
    case 3:
        printf("Enter your new Phone number : ");
        scanf("%s", s.phone);
        fseek(fp, 0, SEEK_SET);
        fwrite(&s, sizeof(s), 1, fp);
        printf("\n");
        divider();
        printf("\n************ PHONE NUMBER CHANGED SUCCESSFULLY ************\n");
        printf("\nPRESS ANY KEY TO CONTINUE .");
        getch();
        system("cls");
        goto top3;
    case 4:
        printf("Enter your new Address : ");
        scanf(" %[^\n]", s.address);
        fseek(fp, 0, SEEK_SET);
        fwrite(&s, sizeof(s), 1, fp);
        printf("\n");
        divider();
        printf("\n************** ADDRESS CHANGED SUCCESSFULLY ************\n");
        printf("\nPRESS ANY KEY TO CONTINUE .");
        getch();
        system("cls");
        goto top3;
    case 5:
        printf("Enter your new Date of Birth : ");
        scanf("%s", s.DOB);
        fseek(fp, 0, SEEK_SET);
        fwrite(&s, sizeof(s), 1, fp);
        printf("\n");
        divider();
        printf("\n************ DOB CHANGED SUCCESSFULLY ************\n");
        printf("\nPRESS ANY KEY TO CONTINUE .");
        getch();
        system("cls");
        goto top3;
    case 6:
        start:
        printf("Enter your new Gender(M/F): ");
        scanf(" %c", &s.gender);
        if (s.gender != 'M' && s.gender != 'F')
        {
            printf("INVALID GENDER!\n");
            goto start;
        }
        fseek(fp, 0, SEEK_SET);
        fwrite(&s, sizeof(s), 1, fp);
        printf("\n");
        divider();
        printf("\n************ GENDER CHANGED SUCCESSFULLY ************\n");
        printf("\nPRESS ANY KEY TO CONTINUE .");
        getch();
        system("cls");
        goto top3;
    case 7:
        printf("Enter your new User Name : ");
        scanf("%s", s.user_name);
        fseek(fp, 0, SEEK_SET);
        fwrite(&s, sizeof(s), 1, fp);
        printf("\n");
        divider();
        printf("\n************ USER NAME CHANGED SUCCESSFULLY ************\n");
        printf("\nPRESS ANY KEY TO CONTINUE .");
        getch();
        system("cls");
        goto top3;
    case 8:
        printf("Enter your new Nick Name : ");
        scanf("%s", s.nick_name);
        fseek(fp, 0, SEEK_SET);
        fwrite(&s, sizeof(s), 1, fp);
        printf("\n");
        divider();
        printf("\n************ USER NAME CHANGED SUCCESSFULLY ************\n");
        printf("\nPRESS ANY KEY TO CONTINUE .");
        getch();
        system("cls");
        goto top3;
    case 9:
        break;
    default:
        printf("INVALID NUMBER!\n");
        printf("\nPRESS ANY KEY TO CONTINUE .");
        getch();
        goto top3;
    }
    fclose(fp);
}
void change_pass()                      //Let us Change password of our account.
{
    system("cls");
    printf("CHANING YOUR PASSWORD....\n");
    divider();
    char current[20],pass2[20],nick[20],user1[20];
    struct account s;
    FILE *fp = fopen("D:\\account.txt", "rb");
    if (fp == NULL)
    {
        printf("Error opening file! Exiting...\n");
        exit(1);
    }
    fread(&s, sizeof(s), 1, fp);
    top1:
    printf("\nEnter username : ");
    scanf("%s", user1);
    if (strcmp(user1, s.user_name))
    {
        printf("\nUser name doesn't match.\n");
        goto top1;
    }
    current:
    printf("\nEnter old password : ");
    takepassword(current);
    if (strcmp(current, s.password))
    {
        printf("\nPassword doesn't match.\n");
        printf("\nDid you forget your password?[Y/N] : ");
        char f = getche();
        if (f == 'Y' || f == 'y')
        {
        nickname:
            printf("\nWhat is your nickname? : ");
            scanf("%s", nick);
            if (strcmp(nick, s.nick_name))
            {
                printf("Incorrect Nickname. Please try again.");
                goto nickname;
            }
            else
            {
            top:
                printf("/nEnter new password : ");
                takepassword(s.password1);
                if (strcmp(s.password1, s.password))
                {
                    printf("\nConfirm new password : ");
                    takepassword(pass2);
                    if (strcmp(pass2, s.password1))
                    {
                        printf("\nPasswords doesn't match try again.\n");
                        goto top;
                    }
                    else
                    {
                        strcpy(s.password, s.password1);
                        fp = fopen("D:\\account.txt", "wb");
                        fwrite(&s, sizeof(s), 1, fp);
                        printf("\n");
                        divider();
                        printf("*************** PASSWORD CHANGED SUCCESSFULLY ***************\n");
                        printf("\nPRESS ANY KEY TO CONTINUE .");
                        getch();
                    }
                }
                else
                {
                    printf("\nNew password cannot be same as Old password.\n");
                    goto top;
                }
            }
        }
        else
        {
            goto current;
        }
    }
    else
    {
    up:
        printf("\nEnter new password : ");
        takepassword(s.password1);
        if (strcmp(s.password1, s.password))
        {
            printf("\n");
            printf("Confirm new password : ");
            takepassword(pass2);
            printf("\n");
            if (strcmp(pass2, s.password1))
            {
                printf("Passwords doesn't match try again.\n");
                goto up;
            }
            else
            {
                strcpy(s.password, s.password1);
                fp = fopen("D:\\account.txt", "wb");
                fwrite(&s, sizeof(s), 1, fp);
                printf("\n");
                divider();
                printf("*************** PASSWORD CHANGED SUCCESSFULLY ***************\n");
                printf("\nPRESS ANY KEY TO CONTINUE .");
                getch();
            }
        }
        else
        {
            printf("\nNew password cannot be same as Old password.\n");
            goto up;
        }
    }
    fclose(fp);
}
void delete_account()                   //Let us Delete our account.
{
    system("cls");
    char user[20];
    char pass[15];
    char nick[20];
    char pass2[20];
    struct account s;
    printf("DELETING YOUR ACCOUNT....\n");
    divider();
    FILE *fp = fopen("D:\\account.txt", "rb");
        if (fp == NULL)
        {
            printf("Error opening file! \n");
            exit(1);
        }
    fread(&s, sizeof(s), 1, fp);
    top1:
    printf("Enter username : ");
    scanf("%s", user);
    if (strcmp(user, s.user_name))
    {
        printf("\nUser name doesn't match.\n");
        goto top1;
    }
    else
    {
        goto top2;
    }
    top2:
    printf("\nEnter password : ");
    takepassword(pass);
    if (strcmp(pass, s.password))
    {
        printf("\nPassword doesn't match.\n");
        printf("\nDid you forget your password?[Y/N] : ");
        char f = getche();
        if (f == 'Y' || f == 'y')
        {
        nickname:
            printf("\nWhat is your nickname? : ");
            scanf("%s", nick);
            if (strcmp(nick, s.nick_name))
            {
                printf("Incorrect Nickname. Please try again.");
                goto nickname;
            }
            else
            {
            top:
                printf("\nEnter new password : ");
                takepassword(s.password1);
                if (strcmp(s.password1, s.password))
                {
                    printf("\n");
                    printf("Confirm new password : ");
                    takepassword(pass2);
                    printf("\n");
                    if (strcmp(pass2, s.password1))
                    {
                        printf("Passwords doesn't match try again.\n");
                        goto top;
                    }
                    else
                    {
                        strcpy(s.password, s.password1);
                        fp = fopen("D:\\account.txt", "wb");
                        fwrite(&s, sizeof(s), 1, fp);
                        printf("\n");
                        divider();
                        printf("*************** PASSWORD CHANGED SUCCESSFULLY ***************\n");
                        printf("\nPRESS ANY KEY TO CONTINUE .");
                        getch();
                        goto top2;
                    }
                }
                else
                {
                    printf("\nNew password cannot be same as Old password.\n");
                    goto top;
                }
            }
        }
        else
        {
            goto top2;
        }
    }
    else
    {
        printf("\nARE YOU SURE YOU WANT TO DELETE YOUR ACCOUNT[Y/N]? : ");
        char ch = getche();
        if (ch == 'Y' || ch == 'y')
        {
            fp = fopen("D:\\account.txt", "wb");
            printf("\n");
            divider();
            printf("\n***************** ACCOUNT DELETED SUCCESSFULLY ********************\n");
            printf("\nPRESS ANY KEY TO CONTINUE .");
            getch();
        }
        else if (ch == 'N' || ch == 'n')
        {
            printf("\n");
            divider();
            printf("\n***************** ACCOUNT DELETION STOPPED ***********************\n");
            printf("\nPRESS ANY KEY TO CONTINUE .");
            getch();
        }
    }
    fclose(fp);
}
